# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Ruddur API
    contact:
        name: Ruddur
        url: https://ruddur.dev
        email: ruddur@leeuwit.nl
    version: v1
paths:
    /ruddur.v1.ClusterService/Create:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceCreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceCreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ClusterService/Delete:
        post:
            tags:
                - ClusterService
            description: 'TODO: Edit (extend / shrink)'
            operationId: ClusterService_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceDeleteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ClusterService/Kubeconfig:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_Kubeconfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceKubeconfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceKubeconfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ClusterService/List:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/ListAvailable:
        post:
            tags:
                - MachineService
            operationId: MachineService_ListAvailable
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Empty'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceListAvailableResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/ListTypes:
        post:
            tags:
                - MachineService
            operationId: MachineService_ListTypes
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Empty'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceListTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/AuthorizeUser:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_AuthorizeUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceAuthorizeUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Create:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceCreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Delete:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/List:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Empty'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/ListUsers:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/RevokeUser:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_RevokeUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceRevokeUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.VirtualMachineService/Create:
        post:
            tags:
                - VirtualMachineService
            operationId: VirtualMachineService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VirtualMachineServiceCreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VirtualMachineServiceCreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.VirtualMachineService/Delete:
        post:
            tags:
                - VirtualMachineService
            operationId: VirtualMachineService_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VirtualMachineServiceDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VirtualMachineServiceDeleteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.VirtualMachineService/List:
        post:
            tags:
                - VirtualMachineService
            operationId: VirtualMachineService_List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VirtualMachineServiceListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VirtualMachineServiceListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.VirtualMachineService/Status:
        post:
            tags:
                - VirtualMachineService
            operationId: VirtualMachineService_Status
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VirtualMachineServiceStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VirtualMachineServiceStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Cluster:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                url:
                    type: string
        ClusterMachineSet:
            type: object
            properties:
                type:
                    type: string
                virtual:
                    $ref: '#/components/schemas/ClusterVirtualMachine'
                amount:
                    type: integer
                    format: int32
        ClusterServiceCreateRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
                controlPlaneNodes:
                    $ref: '#/components/schemas/ClusterMachineSet'
                workerNodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/ClusterMachineSet'
        ClusterServiceCreateResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
                url:
                    type: string
        ClusterServiceDeleteRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        ClusterServiceDeleteResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
        ClusterServiceKubeconfigRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        ClusterServiceKubeconfigResponse:
            type: object
            properties:
                kubeconfig:
                    type: string
                    format: bytes
        ClusterServiceListRequest:
            type: object
            properties:
                project:
                    type: string
        ClusterServiceListResponse:
            type: object
            properties:
                clusters:
                    type: array
                    items:
                        $ref: '#/components/schemas/Cluster'
        ClusterVirtualMachine:
            type: object
            properties:
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: string
        Empty:
            type: object
            properties: {}
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        MachineServiceListAvailableResponse:
            type: object
            properties:
                machines:
                    type: array
                    items:
                        $ref: '#/components/schemas/MachineTypeAndAmount'
        MachineServiceListTypesResponse:
            type: object
            properties:
                types:
                    type: array
                    items:
                        type: string
        MachineTypeAndAmount:
            type: object
            properties:
                type:
                    type: string
                amount:
                    type: integer
                    format: int32
        ProjectServiceAuthorizeUserRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
                user:
                    type: string
                    description: User to authorize.
                role:
                    type: string
                    description: New role of user.
        ProjectServiceCreateRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
        ProjectServiceDeleteRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
        ProjectServiceListResponse:
            type: object
            properties:
                name:
                    type: array
                    items:
                        type: string
                    description: Names of the projects.
        ProjectServiceListUsersRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
        ProjectServiceListUsersResponse:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserAndRole'
                    description: Authorized users.
        ProjectServiceRevokeUserRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
                user:
                    type: string
                    description: User to revoke.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UserAndRole:
            type: object
            properties:
                user:
                    type: string
                role:
                    type: string
        VirtualMachine:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: array
                    items:
                        type: string
                boot:
                    type: string
        VirtualMachineServiceCreateRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: array
                    items:
                        type: string
                boot:
                    type: string
        VirtualMachineServiceCreateResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
        VirtualMachineServiceDeleteRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        VirtualMachineServiceDeleteResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
        VirtualMachineServiceListRequest:
            type: object
            properties:
                project:
                    type: string
        VirtualMachineServiceListResponse:
            type: object
            properties:
                vms:
                    type: array
                    items:
                        $ref: '#/components/schemas/VirtualMachine'
        VirtualMachineServiceStatusRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        VirtualMachineServiceStatusResponse:
            type: object
            properties:
                status:
                    type: string
    securitySchemes:
        openId:
            type: openIdConnect
            openIdConnectUrl: https://auth.ruddur.dev/.well-known/openid-configuration
security:
    - openId: []
tags:
    - name: ClusterService
      description: The clusters service definition.
    - name: MachineService
      description: The machines service definition.
    - name: ProjectService
      description: The project service definition.
    - name: VirtualMachineService
      description: The virtual machines service definition.
