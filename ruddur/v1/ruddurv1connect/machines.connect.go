// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: ruddur/v1/machines.proto

package ruddurv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/leeuwit/ruddur-api/ruddur/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// MachineServiceName is the fully-qualified name of the MachineService service.
	MachineServiceName = "ruddur.v1.MachineService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// MachineServiceListTypesProcedure is the fully-qualified name of the MachineService's ListTypes
	// RPC.
	MachineServiceListTypesProcedure = "/ruddur.v1.MachineService/ListTypes"
	// MachineServiceListAvailableProcedure is the fully-qualified name of the MachineService's
	// ListAvailable RPC.
	MachineServiceListAvailableProcedure = "/ruddur.v1.MachineService/ListAvailable"
)

// MachineServiceClient is a client for the ruddur.v1.MachineService service.
type MachineServiceClient interface {
	ListTypes(context.Context, *connect_go.Request[v1.MachineServiceListTypesRequest]) (*connect_go.Response[v1.MachineServiceListTypesResponse], error)
	ListAvailable(context.Context, *connect_go.Request[v1.MachineServiceListAvailableRequest]) (*connect_go.Response[v1.MachineServiceListAvailableResponse], error)
}

// NewMachineServiceClient constructs a client for the ruddur.v1.MachineService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewMachineServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) MachineServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &machineServiceClient{
		listTypes: connect_go.NewClient[v1.MachineServiceListTypesRequest, v1.MachineServiceListTypesResponse](
			httpClient,
			baseURL+MachineServiceListTypesProcedure,
			opts...,
		),
		listAvailable: connect_go.NewClient[v1.MachineServiceListAvailableRequest, v1.MachineServiceListAvailableResponse](
			httpClient,
			baseURL+MachineServiceListAvailableProcedure,
			opts...,
		),
	}
}

// machineServiceClient implements MachineServiceClient.
type machineServiceClient struct {
	listTypes     *connect_go.Client[v1.MachineServiceListTypesRequest, v1.MachineServiceListTypesResponse]
	listAvailable *connect_go.Client[v1.MachineServiceListAvailableRequest, v1.MachineServiceListAvailableResponse]
}

// ListTypes calls ruddur.v1.MachineService.ListTypes.
func (c *machineServiceClient) ListTypes(ctx context.Context, req *connect_go.Request[v1.MachineServiceListTypesRequest]) (*connect_go.Response[v1.MachineServiceListTypesResponse], error) {
	return c.listTypes.CallUnary(ctx, req)
}

// ListAvailable calls ruddur.v1.MachineService.ListAvailable.
func (c *machineServiceClient) ListAvailable(ctx context.Context, req *connect_go.Request[v1.MachineServiceListAvailableRequest]) (*connect_go.Response[v1.MachineServiceListAvailableResponse], error) {
	return c.listAvailable.CallUnary(ctx, req)
}

// MachineServiceHandler is an implementation of the ruddur.v1.MachineService service.
type MachineServiceHandler interface {
	ListTypes(context.Context, *connect_go.Request[v1.MachineServiceListTypesRequest]) (*connect_go.Response[v1.MachineServiceListTypesResponse], error)
	ListAvailable(context.Context, *connect_go.Request[v1.MachineServiceListAvailableRequest]) (*connect_go.Response[v1.MachineServiceListAvailableResponse], error)
}

// NewMachineServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewMachineServiceHandler(svc MachineServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle(MachineServiceListTypesProcedure, connect_go.NewUnaryHandler(
		MachineServiceListTypesProcedure,
		svc.ListTypes,
		opts...,
	))
	mux.Handle(MachineServiceListAvailableProcedure, connect_go.NewUnaryHandler(
		MachineServiceListAvailableProcedure,
		svc.ListAvailable,
		opts...,
	))
	return "/ruddur.v1.MachineService/", mux
}

// UnimplementedMachineServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedMachineServiceHandler struct{}

func (UnimplementedMachineServiceHandler) ListTypes(context.Context, *connect_go.Request[v1.MachineServiceListTypesRequest]) (*connect_go.Response[v1.MachineServiceListTypesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ruddur.v1.MachineService.ListTypes is not implemented"))
}

func (UnimplementedMachineServiceHandler) ListAvailable(context.Context, *connect_go.Request[v1.MachineServiceListAvailableRequest]) (*connect_go.Response[v1.MachineServiceListAvailableResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ruddur.v1.MachineService.ListAvailable is not implemented"))
}
