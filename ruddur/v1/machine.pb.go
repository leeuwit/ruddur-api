// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: ruddur/v1/machine.proto

package ruddurv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status    string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Id        string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Cpu       string   `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory    string   `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage   []string `protobuf:"bytes,6,rep,name=storage,proto3" json:"storage,omitempty"`
	Boot      string   `protobuf:"bytes,7,opt,name=boot,proto3" json:"boot,omitempty"`
	CloudInit string   `protobuf:"bytes,8,opt,name=cloud_init,json=cloudInit,proto3" json:"cloud_init,omitempty"`
	Addresses []string `protobuf:"bytes,9,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{0}
}

func (x *Machine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Machine) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *Machine) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *Machine) GetStorage() []string {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Machine) GetBoot() string {
	if x != nil {
		return x.Boot
	}
	return ""
}

func (x *Machine) GetCloudInit() string {
	if x != nil {
		return x.CloudInit
	}
	return ""
}

func (x *Machine) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type MachineServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MachineServiceGetRequest) Reset() {
	*x = MachineServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceGetRequest) ProtoMessage() {}

func (x *MachineServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceGetRequest.ProtoReflect.Descriptor instead.
func (*MachineServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{1}
}

func (x *MachineServiceGetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *MachineServiceGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MachineServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *MachineServiceGetResponse) Reset() {
	*x = MachineServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceGetResponse) ProtoMessage() {}

func (x *MachineServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceGetResponse.ProtoReflect.Descriptor instead.
func (*MachineServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{2}
}

func (x *MachineServiceGetResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type MachineServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *MachineServiceListRequest) Reset() {
	*x = MachineServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceListRequest) ProtoMessage() {}

func (x *MachineServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceListRequest.ProtoReflect.Descriptor instead.
func (*MachineServiceListRequest) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{3}
}

func (x *MachineServiceListRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type MachineServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Machine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *MachineServiceListResponse) Reset() {
	*x = MachineServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceListResponse) ProtoMessage() {}

func (x *MachineServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceListResponse.ProtoReflect.Descriptor instead.
func (*MachineServiceListResponse) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{4}
}

func (x *MachineServiceListResponse) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

type MachineServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project   string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Id        string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Cpu       string   `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory    string   `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage   []string `protobuf:"bytes,6,rep,name=storage,proto3" json:"storage,omitempty"`
	Boot      string   `protobuf:"bytes,7,opt,name=boot,proto3" json:"boot,omitempty"`
	CloudInit string   `protobuf:"bytes,8,opt,name=cloud_init,json=cloudInit,proto3" json:"cloud_init,omitempty"`
}

func (x *MachineServiceCreateRequest) Reset() {
	*x = MachineServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceCreateRequest) ProtoMessage() {}

func (x *MachineServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*MachineServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{5}
}

func (x *MachineServiceCreateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *MachineServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineServiceCreateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineServiceCreateRequest) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *MachineServiceCreateRequest) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *MachineServiceCreateRequest) GetStorage() []string {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *MachineServiceCreateRequest) GetBoot() string {
	if x != nil {
		return x.Boot
	}
	return ""
}

func (x *MachineServiceCreateRequest) GetCloudInit() string {
	if x != nil {
		return x.CloudInit
	}
	return ""
}

type MachineServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MachineServiceCreateResponse) Reset() {
	*x = MachineServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceCreateResponse) ProtoMessage() {}

func (x *MachineServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*MachineServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{6}
}

func (x *MachineServiceCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MachineServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MachineServiceDeleteRequest) Reset() {
	*x = MachineServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceDeleteRequest) ProtoMessage() {}

func (x *MachineServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*MachineServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{7}
}

func (x *MachineServiceDeleteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *MachineServiceDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MachineServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MachineServiceDeleteResponse) Reset() {
	*x = MachineServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceDeleteResponse) ProtoMessage() {}

func (x *MachineServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*MachineServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{8}
}

func (x *MachineServiceDeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MachineAvailability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Available   int32    `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Cpu         string   `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory      string   `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage     []string `protobuf:"bytes,6,rep,name=storage,proto3" json:"storage,omitempty"`
}

func (x *MachineAvailability) Reset() {
	*x = MachineAvailability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineAvailability) ProtoMessage() {}

func (x *MachineAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineAvailability.ProtoReflect.Descriptor instead.
func (*MachineAvailability) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{9}
}

func (x *MachineAvailability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineAvailability) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *MachineAvailability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MachineAvailability) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *MachineAvailability) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *MachineAvailability) GetStorage() []string {
	if x != nil {
		return x.Storage
	}
	return nil
}

type MachineServiceListAvailableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MachineServiceListAvailableRequest) Reset() {
	*x = MachineServiceListAvailableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceListAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceListAvailableRequest) ProtoMessage() {}

func (x *MachineServiceListAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceListAvailableRequest.ProtoReflect.Descriptor instead.
func (*MachineServiceListAvailableRequest) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{10}
}

type MachineServiceListAvailableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*MachineAvailability `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *MachineServiceListAvailableResponse) Reset() {
	*x = MachineServiceListAvailableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ruddur_v1_machine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineServiceListAvailableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineServiceListAvailableResponse) ProtoMessage() {}

func (x *MachineServiceListAvailableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ruddur_v1_machine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineServiceListAvailableResponse.ProtoReflect.Descriptor instead.
func (*MachineServiceListAvailableResponse) Descriptor() ([]byte, []int) {
	return file_ruddur_v1_machine_proto_rawDescGZIP(), []int{11}
}

func (x *MachineServiceListAvailableResponse) GetMachines() []*MachineAvailability {
	if x != nil {
		return x.Machines
	}
	return nil
}

var File_ruddur_v1_machine_proto protoreflect.FileDescriptor

var file_ruddur_v1_machine_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x75, 0x64, 0x64, 0x75,
	0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70,
	0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x69,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22,
	0x48, 0x0a, 0x18, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x19, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x4c, 0x0a, 0x1a, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75,
	0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x1b, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x22, 0x38,
	0x0a, 0x1c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x1c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xa9, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x61, 0x0a, 0x23, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x75, 0x64,
	0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x32, 0xc5, 0x05, 0x0a, 0x0e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x23,
	0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x47, 0x65, 0x74, 0x30, 0x01, 0x12, 0x7e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e,
	0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x72,
	0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x86,
	0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x72, 0x75, 0x64, 0x64,
	0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x72, 0x75, 0x64, 0x64,
	0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c,
	0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x94, 0x01, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x65, 0x75, 0x77,
	0x69, 0x74, 0x2f, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x75,
	0x64, 0x64, 0x75, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x75, 0x64, 0x64, 0x75, 0x72, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x52, 0x75, 0x64, 0x64, 0x75, 0x72, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x09, 0x52, 0x75, 0x64, 0x64, 0x75, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x15, 0x52, 0x75, 0x64, 0x64, 0x75, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x52, 0x75, 0x64, 0x64, 0x75, 0x72, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ruddur_v1_machine_proto_rawDescOnce sync.Once
	file_ruddur_v1_machine_proto_rawDescData = file_ruddur_v1_machine_proto_rawDesc
)

func file_ruddur_v1_machine_proto_rawDescGZIP() []byte {
	file_ruddur_v1_machine_proto_rawDescOnce.Do(func() {
		file_ruddur_v1_machine_proto_rawDescData = protoimpl.X.CompressGZIP(file_ruddur_v1_machine_proto_rawDescData)
	})
	return file_ruddur_v1_machine_proto_rawDescData
}

var file_ruddur_v1_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_ruddur_v1_machine_proto_goTypes = []interface{}{
	(*Machine)(nil),                             // 0: ruddur.v1.Machine
	(*MachineServiceGetRequest)(nil),            // 1: ruddur.v1.MachineServiceGetRequest
	(*MachineServiceGetResponse)(nil),           // 2: ruddur.v1.MachineServiceGetResponse
	(*MachineServiceListRequest)(nil),           // 3: ruddur.v1.MachineServiceListRequest
	(*MachineServiceListResponse)(nil),          // 4: ruddur.v1.MachineServiceListResponse
	(*MachineServiceCreateRequest)(nil),         // 5: ruddur.v1.MachineServiceCreateRequest
	(*MachineServiceCreateResponse)(nil),        // 6: ruddur.v1.MachineServiceCreateResponse
	(*MachineServiceDeleteRequest)(nil),         // 7: ruddur.v1.MachineServiceDeleteRequest
	(*MachineServiceDeleteResponse)(nil),        // 8: ruddur.v1.MachineServiceDeleteResponse
	(*MachineAvailability)(nil),                 // 9: ruddur.v1.MachineAvailability
	(*MachineServiceListAvailableRequest)(nil),  // 10: ruddur.v1.MachineServiceListAvailableRequest
	(*MachineServiceListAvailableResponse)(nil), // 11: ruddur.v1.MachineServiceListAvailableResponse
}
var file_ruddur_v1_machine_proto_depIdxs = []int32{
	0,  // 0: ruddur.v1.MachineServiceGetResponse.machine:type_name -> ruddur.v1.Machine
	0,  // 1: ruddur.v1.MachineServiceListResponse.machines:type_name -> ruddur.v1.Machine
	9,  // 2: ruddur.v1.MachineServiceListAvailableResponse.machines:type_name -> ruddur.v1.MachineAvailability
	1,  // 3: ruddur.v1.MachineService.Get:input_type -> ruddur.v1.MachineServiceGetRequest
	3,  // 4: ruddur.v1.MachineService.List:input_type -> ruddur.v1.MachineServiceListRequest
	5,  // 5: ruddur.v1.MachineService.Create:input_type -> ruddur.v1.MachineServiceCreateRequest
	7,  // 6: ruddur.v1.MachineService.Delete:input_type -> ruddur.v1.MachineServiceDeleteRequest
	10, // 7: ruddur.v1.MachineService.ListAvailable:input_type -> ruddur.v1.MachineServiceListAvailableRequest
	2,  // 8: ruddur.v1.MachineService.Get:output_type -> ruddur.v1.MachineServiceGetResponse
	4,  // 9: ruddur.v1.MachineService.List:output_type -> ruddur.v1.MachineServiceListResponse
	6,  // 10: ruddur.v1.MachineService.Create:output_type -> ruddur.v1.MachineServiceCreateResponse
	8,  // 11: ruddur.v1.MachineService.Delete:output_type -> ruddur.v1.MachineServiceDeleteResponse
	11, // 12: ruddur.v1.MachineService.ListAvailable:output_type -> ruddur.v1.MachineServiceListAvailableResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_ruddur_v1_machine_proto_init() }
func file_ruddur_v1_machine_proto_init() {
	if File_ruddur_v1_machine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ruddur_v1_machine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineAvailability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceListAvailableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ruddur_v1_machine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineServiceListAvailableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ruddur_v1_machine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ruddur_v1_machine_proto_goTypes,
		DependencyIndexes: file_ruddur_v1_machine_proto_depIdxs,
		MessageInfos:      file_ruddur_v1_machine_proto_msgTypes,
	}.Build()
	File_ruddur_v1_machine_proto = out.File
	file_ruddur_v1_machine_proto_rawDesc = nil
	file_ruddur_v1_machine_proto_goTypes = nil
	file_ruddur_v1_machine_proto_depIdxs = nil
}
