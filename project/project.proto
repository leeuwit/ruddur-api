syntax = "proto3";

package project;

option go_package = "github.com/leeuwit/ruddur/api/project";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// The project service definition.
service ProjectService {
  rpc ListProjects(google.protobuf.Empty) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get: "/v1/projects"
    };
  };
  rpc CreateProject(CreateProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/projects"
      body: "*"
    };
  };
  rpc AuthorizeUser(AuthorizeUserForProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/projects/{project}/authorize/{user}"
    };
  };
  rpc RevokeUser(RevokeUserForProjectRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/projects/{project}/revoke/{user}"
    };
  };
}

message ListProjectsResponse {
  // Names of the projects.
  repeated string name = 1;
}

message CreateProjectRequest {
  // Name of the project.
  string name = 1;
}

message AuthorizeUserForProjectRequest {
  // Name of the project.
  string project = 1;
  // User to authorize.
  string user = 2;
}

message RevokeUserForProjectRequest {
  // Name of the project.
  string project = 1;
  // User to revoke.
  string user = 2;
}
