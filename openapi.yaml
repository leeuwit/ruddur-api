# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Ruddur API
    contact:
        name: Ruddur
        url: https://ruddur.dev
        email: ruddur@leeuwit.nl
    version: v1
paths:
    /ruddur.v1.ClusterService/Create:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceCreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceCreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ClusterService/Delete:
        post:
            tags:
                - ClusterService
            description: 'TODO: Edit (extend / shrink)'
            operationId: ClusterService_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceDeleteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ClusterService/Kubeconfig:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_Kubeconfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceKubeconfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceKubeconfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ClusterService/List:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClusterServiceListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClusterServiceListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/Create:
        post:
            tags:
                - MachineService
            operationId: MachineService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MachineServiceCreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceCreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/Delete:
        post:
            tags:
                - MachineService
            operationId: MachineService_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MachineServiceDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceDeleteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/Get:
        post:
            tags:
                - MachineService
            operationId: MachineService_Get
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MachineServiceGetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceGetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/List:
        post:
            tags:
                - MachineService
            operationId: MachineService_List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MachineServiceListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.MachineService/ListAvailable:
        post:
            tags:
                - MachineService
            operationId: MachineService_ListAvailable
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MachineServiceListAvailableRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MachineServiceListAvailableResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Authorize:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Authorize
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceAuthorizeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceAuthorizeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Create:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceCreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceCreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Delete:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceDeleteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Get:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Get
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceGetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceGetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/List:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Register:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceRegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceRegisterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /ruddur.v1.ProjectService/Revoke:
        post:
            tags:
                - ProjectService
            operationId: ProjectService_Revoke
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProjectServiceRevokeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectServiceRevokeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Cluster:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                url:
                    type: string
        ClusterMachineSet:
            type: object
            properties:
                role:
                    type: integer
                    format: enum
                amount:
                    type: integer
                    format: int32
                id:
                    type: string
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: string
        ClusterServiceCreateRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/ClusterMachineSet'
        ClusterServiceCreateResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
                url:
                    type: string
        ClusterServiceDeleteRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        ClusterServiceDeleteResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
        ClusterServiceKubeconfigRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        ClusterServiceKubeconfigResponse:
            type: object
            properties:
                kubeconfig:
                    type: string
                    format: bytes
        ClusterServiceListRequest:
            type: object
            properties:
                project:
                    type: string
        ClusterServiceListResponse:
            type: object
            properties:
                clusters:
                    type: array
                    items:
                        $ref: '#/components/schemas/Cluster'
        EmailAndRole:
            type: object
            properties:
                email:
                    type: string
                role:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Machine:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                id:
                    type: string
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: array
                    items:
                        type: string
                boot:
                    type: string
                cloudInit:
                    type: string
        MachineAvailability:
            type: object
            properties:
                id:
                    type: string
                available:
                    type: integer
                    format: int32
                description:
                    type: string
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: array
                    items:
                        type: string
        MachineServiceCreateRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
                id:
                    type: string
                cpu:
                    type: string
                memory:
                    type: string
                storage:
                    type: array
                    items:
                        type: string
                boot:
                    type: string
                cloudInit:
                    type: string
        MachineServiceCreateResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
        MachineServiceDeleteRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        MachineServiceDeleteResponse:
            type: object
            properties:
                status:
                    type: string
                message:
                    type: string
        MachineServiceGetRequest:
            type: object
            properties:
                project:
                    type: string
                name:
                    type: string
        MachineServiceGetResponse:
            type: object
            properties:
                machine:
                    $ref: '#/components/schemas/Machine'
        MachineServiceListAvailableRequest:
            type: object
            properties: {}
        MachineServiceListAvailableResponse:
            type: object
            properties:
                machines:
                    type: array
                    items:
                        $ref: '#/components/schemas/MachineAvailability'
        MachineServiceListRequest:
            type: object
            properties:
                project:
                    type: string
        MachineServiceListResponse:
            type: object
            properties:
                machines:
                    type: array
                    items:
                        $ref: '#/components/schemas/Machine'
        ProjectServiceAuthorizeRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
                email:
                    type: string
                    description: 'Email to authorize, can be a wildcard. Example to authorize a single user: john.doe@example.com Example to authorize all users in a domain: @example.com'
                role:
                    type: string
                    description: Role to authorize.
        ProjectServiceAuthorizeResponse:
            type: object
            properties: {}
        ProjectServiceCreateRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
        ProjectServiceCreateResponse:
            type: object
            properties: {}
        ProjectServiceDeleteRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
        ProjectServiceDeleteResponse:
            type: object
            properties: {}
        ProjectServiceGetRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
        ProjectServiceGetResponse:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
                emails:
                    type: array
                    items:
                        $ref: '#/components/schemas/EmailAndRole'
                    description: Authorized emails.
        ProjectServiceListRequest:
            type: object
            properties: {}
        ProjectServiceListResponse:
            type: object
            properties:
                name:
                    type: array
                    items:
                        type: string
                    description: Names of the projects.
        ProjectServiceRegisterRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project, also used as the subdomain.
                firstName:
                    type: string
                    description: First name of contact person.
                lastName:
                    type: string
                    description: Last name of contact person.
                email:
                    type: string
                    description: Email address of contact person.
                company:
                    type: string
                    description: Company, optional.
        ProjectServiceRegisterResponse:
            type: object
            properties: {}
        ProjectServiceRevokeRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the project.
                email:
                    type: string
                    description: Email to authorize, can be a wildcard.
        ProjectServiceRevokeResponse:
            type: object
            properties: {}
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    securitySchemes:
        openId:
            type: openIdConnect
            openIdConnectUrl: https://auth.ruddur.dev/realms/master/.well-known/openid-configuration
security:
    - openId: []
tags:
    - name: ClusterService
      description: The cluster service definition.
    - name: MachineService
      description: The machine service definition.
    - name: ProjectService
      description: The project service definition.
